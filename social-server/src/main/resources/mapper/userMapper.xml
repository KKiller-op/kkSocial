<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper .//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kk.dao.UserDao">

    <resultMap id="getUserById" type="com.kk.bean.User">
        <id property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
		<result property="url" column="url" />
        <collection property="friendsList" select="getUserAndFriendsById" column="id"></collection>
		<collection property="countFriends" select="countFriends" column="id"></collection>
    </resultMap>
	<resultMap id="getByData" type="com.kk.bean.User">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="url" column="url" />
		<collection property="countFans" select="com.kk.dao.FansDao.count" column="{flag = true, id = id}"></collection>
		<collection property="countNews" select="com.kk.dao.NewsDao.count" column="id"></collection>
		<collection property="countUser" select="com.kk.dao.FansDao.count" column="{flag = false, id = id}"></collection>
	</resultMap>
	<select id="getByData" resultMap="getByData" parameterType="Integer">
		select `id`, `name`, `url`
		from `tb_user` where id = #{id}
	</select>
    <select id="getUserById" resultMap="getUserById" parameterType="Integer">
        SELECT `id`, `email`, `password`, `name`, `gender`,`url`
        FROM `tb_user`
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>
    </select>
	<select id="getUserId" resultType="com.kk.bean.User" parameterType="Integer">
		select `id`, `name`, `url`,(select count(`user_id`) from `tb_news` where `user_id` = #{id}) as countNews
		from `tb_user` where id = #{id}
	</select>
	<resultMap id="getUserByName" type="com.kk.bean.User">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="url" column="url"/>
		<collection property="newsList" column="id" select="com.kk.dao.NewsDao.getNewsAndOwn"></collection>
		<collection property="countNews" column="id" select="com.kk.dao.NewsDao.count"></collection>
	</resultMap>
	<select id="getUserByName" resultMap="getUserByName" parameterType="String">
		select `id`, `name`, `url`
		from `tb_user` where `name` = #{name}
	</select>
	<select id="getUserEAndP" parameterType="String" resultType="Integer">
		select `id` from `tb_user`
		<where>
			<if test="email != null and email != ''">
				and `email` = #{email}
			</if>
			<if test="password != null and password !=''">
				and `password` = #{password}
			</if>
		</where>

	</select>
	<select id="countFriends" resultType="Integer" parameterType="Integer">
		SELECT
	count( f.friend_id )
FROM
	`tb_user` u
	LEFT JOIN `tb_friends` f ON f.user_id = u.id
WHERE
	u.id = #{id}
	</select>
    <select id="getUserAndFriendsById" parameterType="Integer" resultType="com.kk.bean.User">
        SELECT * FROM `tb_user` WHERE id IN( SELECT f.friend_id FROM `tb_user` u LEFT JOIN `tb_friends` f ON f.user_id = u.id WHERE u.id = #{id})
    </select>
    <insert id="addUser" parameterType="com.kk.bean.User">
        INSERT INTO `tb_user` ( `id`, `email`, `name`, `password`, `gender`,`url` )
VALUES
	(
		#{id},
		#{email},
		#{name},
	    #{password},
	    #{gender},
	    #{url}
	)
    </insert>
	<delete id="deleteUserById" parameterType="Integer">
		delete from `tb_user` where id = #{id}
	</delete>
	<insert id="addFriend" parameterType="Integer">
		
		insert into `tb_friends`(`user_id`,`friend_id`)values(#{user_id},#{friend_id});

	</insert>
	<delete id="deleteFriend" parameterType="Integer">
		delete from `tb_friends` where `user_id` = #{user_id} and `friend_id` = #{friend_id}
	</delete>
	<update id="updatePwd" parameterType="String">
		update `tb_user` set `password` = #{password} where `email` = #{email}
	</update>
</mapper>